/*!
 * Griddy - Simple grid framework fror Sass
 * https://github.com/jacobbuck/griddy
 * Copyright (c) 2015 Jacob Buck
 * Licensed under the terms of the MIT license.
 */

// Default grid gutter width
$griddy-gutter: 1em !default;

// Default grid direction
$griddy-direction: left !default;

// Helper function to parse size argument into a percentage size
// @param mixed $size Expected formats: `25%` or `1 of 4`
// @return number $size
@function griddy-size ($size) {
	@if length($size) == 3 and nth($size, 2) == "of" {
		@return (nth($size, 1) / nth($size, 3)) * 100%;
	}
	@if unit($size) == "%" {
		@return $size;
	}
	@error "$size must be either a list or number in % unit, was #{$size}.";
}

// Output styles for a grid row
// @param number $gutter optional override width of grid gutter
@mixin griddy-row ($gutter: $griddy-gutter) {
	@if mixin-exists(clearfix) {
		@include clearfix();
	} @else {
		&:after {
			content: "";
			display: table;
			clear: both;
		}
	}
	@if $gutter > 0 {
		margin-#{$griddy-direction}: $gutter * -1;
	}
}

// Output styles for a grid column
// @param mixed $width width of column (@see griddy-size)
// @param number $gutter optional override width of grid gutter
@mixin griddy-column ($width, $gutter: $griddy-gutter) {
	@if $gutter > 0 {
		@if mixin-exists(box-sizing) {
			@include box-sizing(border-box);
		} @else {
			-webkit-box-sizing: border-box;
			-moz-box-sizing: border-box;
			box-sizing: border-box;
		}
		padding-left: $gutter;
	}
	float: $griddy-direction;
	width: griddy-size($width);
}

// Output offset style for a grid column
// @param mixed $offset offset of column (@see griddy-size)
@mixin griddy-offset ($offset) {
	margin-#{$griddy-direction}: griddy-size($offset);
}

// Output clear style for a grid column
@mixin griddy-clear {
	clear: $griddy-direction;
}
